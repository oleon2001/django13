# Generated by Django 5.2.3 on 2025-01-27 10:00

from django.db import migrations, models
import django.contrib.gis.db.models.fields
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('gps', '0015_vehicle'),
    ]

    operations = [
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('SOS', 'SOS Alert'), ('LOW_BATTERY', 'Low Battery'), ('GEOFENCE', 'Geofence Alert'), ('SPEED', 'Speed Alert'), ('TAMPER', 'Tamper Alert'), ('POWER', 'Power Alert'), ('OTHER', 'Other Alert')], max_length=20)),
                ('position', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('message', models.TextField()),
                ('is_acknowledged', models.BooleanField(default=False)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('acknowledged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='acknowledged_alerts', to='auth.user')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='gps.gpsdevice')),
            ],
            options={
                'verbose_name': 'Alert',
                'verbose_name_plural': 'Alerts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Geofence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('area', django.contrib.gis.db.models.fields.PolygonField(srid=4326)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Geofence',
                'verbose_name_plural': 'Geofences',
            },
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('distance', models.FloatField(default=0)),
                ('average_speed', models.FloatField(default=0)),
                ('max_speed', models.FloatField(default=0)),
                ('is_completed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='routes', to='gps.gpsdevice')),
            ],
            options={
                'verbose_name': 'Route',
                'verbose_name_plural': 'Routes',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='RoutePoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('speed', models.FloatField(default=0)),
                ('timestamp', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='points', to='tracking.route')),
            ],
            options={
                'verbose_name': 'Route Point',
                'verbose_name_plural': 'Route Points',
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='TrackingConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auto_start', models.BooleanField(default=False)),
                ('auto_stop', models.BooleanField(default=False)),
                ('geofence_alerts', models.BooleanField(default=True)),
                ('speed_alerts', models.BooleanField(default=True)),
                ('battery_alerts', models.BooleanField(default=True)),
                ('signal_alerts', models.BooleanField(default=True)),
                ('min_speed_threshold', models.FloatField(default=5.0)),
                ('max_speed_threshold', models.FloatField(default=120.0)),
                ('battery_threshold', models.FloatField(default=20.0)),
                ('update_interval', models.IntegerField(default=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('device', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='tracking_config', to='gps.gpsdevice')),
            ],
            options={
                'verbose_name': 'Tracking Configuration',
                'verbose_name_plural': 'Tracking Configurations',
            },
        ),
        migrations.CreateModel(
            name='TrackingEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('START', 'Session Start'), ('STOP', 'Session Stop'), ('PAUSE', 'Session Pause'), ('RESUME', 'Session Resume'), ('GEOFENCE_ENTER', 'Geofence Enter'), ('GEOFENCE_EXIT', 'Geofence Exit'), ('SPEED_ALERT', 'Speed Alert'), ('BATTERY_LOW', 'Battery Low'), ('SIGNAL_LOST', 'Signal Lost'), ('SIGNAL_RESTORED', 'Signal Restored'), ('OTHER', 'Other Event')], max_length=20)),
                ('position', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('timestamp', models.DateTimeField()),
                ('data', models.JSONField(blank=True, default=dict)),
                ('message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Tracking Event',
                'verbose_name_plural': 'Tracking Events',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='TrackingPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('speed', models.FloatField(default=0)),
                ('course', models.FloatField(default=0)),
                ('altitude', models.FloatField(default=0)),
                ('timestamp', models.DateTimeField()),
                ('accuracy', models.FloatField(default=0)),
                ('satellites', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Tracking Point',
                'verbose_name_plural': 'Tracking Points',
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='TrackingSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=40, unique=True)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('PAUSED', 'Paused'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='ACTIVE', max_length=20)),
                ('start_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('total_distance', models.FloatField(default=0)),
                ('average_speed', models.FloatField(default=0)),
                ('max_speed', models.FloatField(default=0)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tracking_sessions', to='gps.gpsdevice')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tracking_sessions', to='auth.user')),
            ],
            options={
                'verbose_name': 'Tracking Session',
                'verbose_name_plural': 'Tracking Sessions',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='UdpSession',
            fields=[
                ('session', models.AutoField(primary_key=True, serialize=False, verbose_name='session')),
                ('expires', models.DateTimeField(verbose_name='expires')),
                ('host', models.CharField(max_length=128, verbose_name='host')),
                ('port', models.IntegerField(verbose_name='port')),
                ('lastRec', models.IntegerField(default=0, verbose_name='rec')),
                ('imei', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='udp_session', to='gps.gpsdevice', unique=True)),
            ],
            options={
                'verbose_name': 'UDP Session',
                'verbose_name_plural': 'UDP Sessions',
                'ordering': ('imei',),
            },
        ),
        migrations.AddField(
            model_name='trackingpoint',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='points', to='tracking.trackingsession'),
        ),
        migrations.AddField(
            model_name='trackingevent',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='tracking.trackingsession'),
        ),
    ] 