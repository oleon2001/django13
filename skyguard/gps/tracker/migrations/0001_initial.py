# Generated by Django 4.2.22 on 2025-06-17 19:14

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import skyguard.gps.tracker.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AddressCache",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "position",
                    django.contrib.gis.db.models.fields.PointField(
                        editable=False, null=True, srid=4326
                    ),
                ),
                ("date", models.DateTimeField(editable=False)),
                ("text", models.TextField(default="N/D")),
            ],
        ),
        migrations.CreateModel(
            name="Device",
            fields=[
                (
                    "imei",
                    models.BigIntegerField(
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="imei",
                    ),
                ),
                ("name", models.CharField(max_length=20, verbose_name="name")),
                (
                    "position",
                    django.contrib.gis.db.models.fields.PointField(
                        editable=False, null=True, srid=4326, verbose_name="position"
                    ),
                ),
                (
                    "speed",
                    models.SmallIntegerField(
                        default=0, editable=False, verbose_name="speed"
                    ),
                ),
                (
                    "course",
                    models.SmallIntegerField(
                        default=0, editable=False, verbose_name="course"
                    ),
                ),
                (
                    "date",
                    models.DateTimeField(
                        editable=False, null=True, verbose_name="date"
                    ),
                ),
                (
                    "lastLog",
                    models.DateTimeField(
                        editable=False, null=True, verbose_name="last update"
                    ),
                ),
                (
                    "icon",
                    models.CharField(
                        default="camion100sff.png", max_length=64, verbose_name="icon"
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        default="tracker.SGAvl",
                        editable=False,
                        max_length=64,
                        verbose_name="type",
                    ),
                ),
                (
                    "odom",
                    models.IntegerField(
                        default=0, editable=False, null=True, verbose_name="odometer"
                    ),
                ),
                (
                    "altitude",
                    models.IntegerField(
                        default=0, editable=False, null=True, verbose_name="altitude"
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "device",
                "verbose_name_plural": "devices",
                "ordering": ("imei",),
                "unique_together": {("name", "owner")},
            },
        ),
        migrations.CreateModel(
            name="Driver",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=40, verbose_name="Nombre")),
                ("middle", models.CharField(max_length=40, verbose_name="A. Paterno")),
                ("last", models.CharField(max_length=40, verbose_name="A. Materno")),
                ("birth", models.DateField(verbose_name="F. de nacimiento")),
                (
                    "cstatus",
                    models.CharField(
                        choices=[
                            ("SOL", "Soltero"),
                            ("CAS", "Casado"),
                            ("VIU", "Viudo"),
                            ("DIV", "Divorciado"),
                        ],
                        max_length=40,
                        verbose_name="Estado Civil",
                    ),
                ),
                ("payroll", models.CharField(max_length=40, verbose_name="Nómina")),
                (
                    "socials",
                    models.CharField(max_length=40, verbose_name="Seguro social"),
                ),
                ("taxid", models.CharField(max_length=40, verbose_name="RFC")),
                (
                    "license",
                    models.CharField(
                        blank=True, max_length=40, null=True, verbose_name="Licencia"
                    ),
                ),
                (
                    "lic_exp",
                    models.DateField(blank=True, null=True, verbose_name="Vencimiento"),
                ),
                ("address", models.TextField(verbose_name="Dirección")),
                ("phone", models.CharField(max_length=40, verbose_name="Teléfono")),
                (
                    "phone1",
                    models.CharField(
                        blank=True, max_length=40, null=True, verbose_name="Teléfono 1"
                    ),
                ),
                (
                    "phone2",
                    models.CharField(
                        blank=True, max_length=40, null=True, verbose_name="Teléfono 2"
                    ),
                ),
                ("active", models.BooleanField(default=True, verbose_name="Activo")),
            ],
            options={
                "verbose_name": "Chofer",
                "verbose_name_plural": "Choferes",
                "ordering": ("middle", "last", "name"),
            },
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("type", models.CharField(max_length=16)),
                (
                    "position",
                    django.contrib.gis.db.models.fields.PointField(
                        editable=False, null=True, srid=4326
                    ),
                ),
                ("speed", models.SmallIntegerField(default=0, editable=False)),
                ("course", models.SmallIntegerField(default=0, editable=False)),
                ("date", models.DateTimeField(editable=False)),
                (
                    "odom",
                    models.IntegerField(
                        default=0, editable=False, null=True, verbose_name="odometer"
                    ),
                ),
                (
                    "altitude",
                    models.IntegerField(
                        default=0, editable=False, null=True, verbose_name="altitude"
                    ),
                ),
                (
                    "imei",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="tracker.device"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GeoFence",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=32, unique=True, verbose_name="name"),
                ),
                (
                    "fence",
                    django.contrib.gis.db.models.fields.PolygonField(
                        srid=4326, verbose_name="polygon"
                    ),
                ),
                (
                    "base",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (92, "Ruta 4"),
                            (112, "Ruta 6"),
                            (114, "Ruta 12"),
                            (115, "Ruta 31"),
                            (90, "Ruta 82"),
                            (88, "Ruta 118"),
                            (215, "Ruta 140"),
                            (89, "Ruta 202"),
                            (116, "Ruta 207"),
                            (96, "Ruta 400"),
                            (97, "Ruta 408"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tracker_geofence_set",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SGHarness",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=32, unique=True, verbose_name="name"),
                ),
                (
                    "in00",
                    models.CharField(
                        default="PANIC", max_length=32, verbose_name="input 0"
                    ),
                ),
                (
                    "in01",
                    models.CharField(
                        default="IGNITION", max_length=32, verbose_name="input 1"
                    ),
                ),
                ("in02", models.CharField(max_length=32, verbose_name="input 2")),
                ("in03", models.CharField(max_length=32, verbose_name="input 3")),
                ("in04", models.CharField(max_length=32, verbose_name="input 4")),
                ("in05", models.CharField(max_length=32, verbose_name="input 5")),
                (
                    "in06",
                    models.CharField(
                        default="BAT_DOK", max_length=32, verbose_name="input 6"
                    ),
                ),
                (
                    "in07",
                    models.CharField(
                        default="BAT_CHG", max_length=32, verbose_name="input 7"
                    ),
                ),
                (
                    "in08",
                    models.CharField(
                        default="BAT_FLT", max_length=32, verbose_name="input 8"
                    ),
                ),
                ("in09", models.CharField(max_length=32, verbose_name="input 9")),
                ("in10", models.CharField(max_length=32, verbose_name="input 10")),
                ("in11", models.CharField(max_length=32, verbose_name="input 11")),
                ("in12", models.CharField(max_length=32, verbose_name="input 12")),
                ("in13", models.CharField(max_length=32, verbose_name="input 13")),
                ("in14", models.CharField(max_length=32, verbose_name="input 14")),
                ("in15", models.CharField(max_length=32, verbose_name="input 15")),
                (
                    "out00",
                    models.CharField(
                        default="MOTOR", max_length=32, verbose_name="output 0"
                    ),
                ),
                ("out01", models.CharField(max_length=32, verbose_name="output 1")),
                ("out02", models.CharField(max_length=32, verbose_name="output 2")),
                ("out03", models.CharField(max_length=32, verbose_name="output 3")),
                ("out04", models.CharField(max_length=32, verbose_name="output 4")),
                ("out05", models.CharField(max_length=32, verbose_name="output 5")),
                ("out06", models.CharField(max_length=32, verbose_name="output 6")),
                ("out07", models.CharField(max_length=32, verbose_name="output 7")),
                ("out08", models.CharField(max_length=32, verbose_name="output 8")),
                ("out09", models.CharField(max_length=32, verbose_name="output 9")),
                ("out10", models.CharField(max_length=32, verbose_name="output 10")),
                ("out11", models.CharField(max_length=32, verbose_name="output 11")),
                ("out12", models.CharField(max_length=32, verbose_name="output 12")),
                ("out13", models.CharField(max_length=32, verbose_name="output 13")),
                ("out14", models.CharField(max_length=32, verbose_name="output 14")),
                ("out15", models.CharField(max_length=32, verbose_name="output 15")),
                (
                    "inputCfg",
                    models.CharField(max_length=32, verbose_name="input configuration"),
                ),
            ],
            options={
                "verbose_name": "harness",
                "verbose_name_plural": "devices",
            },
        ),
        migrations.CreateModel(
            name="SimCard",
            fields=[
                ("iccid", models.BigIntegerField(primary_key=True, serialize=False)),
                ("imsi", models.BigIntegerField(null=True)),
                (
                    "provider",
                    models.SmallIntegerField(
                        choices=[(0, "Telcel"), (1, "Movistar"), (2, "IusaCell")],
                        default=0,
                    ),
                ),
                ("phone", models.CharField(max_length=16)),
            ],
        ),
        migrations.CreateModel(
            name="Stats",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=20, verbose_name="name")),
                (
                    "ruta",
                    models.IntegerField(
                        choices=[
                            (92, "Ruta 4"),
                            (112, "Ruta 6"),
                            (114, "Ruta 12"),
                            (115, "Ruta 31"),
                            (90, "Ruta 82"),
                            (88, "Ruta 118"),
                            (215, "Ruta 140"),
                            (89, "Ruta 202"),
                            (116, "Ruta 207"),
                            (96, "Ruta 400"),
                            (97, "Ruta 408"),
                        ]
                    ),
                ),
                ("economico", models.IntegerField()),
                (
                    "date_start",
                    models.DateTimeField(
                        editable=False, null=True, verbose_name="date"
                    ),
                ),
                ("date_end", models.DateTimeField(editable=False, verbose_name="date")),
                ("latitud", models.IntegerField(blank=True, null=True)),
                ("longitud", models.IntegerField(blank=True, null=True)),
                ("distancia", models.IntegerField(blank=True, null=True)),
                ("sub_del", models.IntegerField(blank=True, null=True)),
                ("baj_del", models.IntegerField(blank=True, null=True)),
                ("sub_tra", models.IntegerField(blank=True, null=True)),
                ("baj_tra", models.IntegerField(blank=True, null=True)),
                ("speed_avg", models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="TicketsLog",
            fields=[
                (
                    "id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="Folio"
                    ),
                ),
                ("data", models.TextField(verbose_name="Data")),
                (
                    "ruta",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (92, "Ruta 4"),
                            (112, "Ruta 6"),
                            (114, "Ruta 12"),
                            (115, "Ruta 31"),
                            (90, "Ruta 82"),
                            (88, "Ruta 118"),
                            (215, "Ruta 140"),
                            (89, "Ruta 202"),
                            (116, "Ruta 207"),
                            (96, "Ruta 400"),
                            (97, "Ruta 408"),
                        ],
                        null=True,
                    ),
                ),
                ("date", models.DateTimeField(null=True, verbose_name="Inicio")),
            ],
        ),
        migrations.CreateModel(
            name="TimeSheetCapture",
            fields=[
                (
                    "id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="Folio"
                    ),
                ),
                ("name", models.CharField(max_length=20, verbose_name="name")),
                ("date", models.DateTimeField(null=True, verbose_name="Inicio")),
                ("chofer", models.CharField(max_length=80, verbose_name="Nombre")),
                ("vueltas", models.IntegerField()),
                ("times", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="GsmEvent",
            fields=[
                (
                    "event_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="tracker.event",
                    ),
                ),
                ("source", models.CharField(max_length=20)),
                ("text", models.CharField(max_length=180)),
            ],
            bases=("tracker.event",),
        ),
        migrations.CreateModel(
            name="IOEvent",
            fields=[
                (
                    "event_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="tracker.event",
                    ),
                ),
                ("inputs", models.IntegerField()),
                ("outputs", models.IntegerField()),
                ("indelta", models.IntegerField(default=0, editable=False)),
                ("outdelta", models.IntegerField(default=0, editable=False)),
                ("alarmdelta", models.IntegerField(default=0, editable=False)),
                ("changes", models.TextField()),
            ],
            bases=("tracker.event",),
        ),
        migrations.CreateModel(
            name="ResetEvent",
            fields=[
                (
                    "event_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="tracker.event",
                    ),
                ),
                ("reason", models.CharField(max_length=180)),
            ],
            bases=("tracker.event",),
        ),
        migrations.CreateModel(
            name="Tracking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tracking",
                    models.CharField(
                        max_length=40, unique=True, verbose_name="tracking"
                    ),
                ),
                ("start", models.DateTimeField(db_index=True, editable=False)),
                (
                    "stop",
                    models.DateTimeField(db_index=True, editable=False, null=True),
                ),
                (
                    "fences",
                    models.ManyToManyField(
                        related_name="events_set", to="tracker.geofence"
                    ),
                ),
                (
                    "imei",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="tracker.device"
                    ),
                ),
                (
                    "stopFence",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stop_set",
                        to="tracker.geofence",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TicketDetails",
            fields=[
                (
                    "id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="Folio"
                    ),
                ),
                ("date", models.DateTimeField(null=True, verbose_name="Inicio")),
                ("chofer", models.CharField(max_length=80, verbose_name="Nombre")),
                ("total", models.IntegerField()),
                ("recibido", models.IntegerField()),
                ("ticket", models.TextField(verbose_name="Data")),
                (
                    "imei",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="tracker.device"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PsiWeightLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sensor",
                    models.CharField(max_length=32, verbose_name="sensor serial"),
                ),
                ("date", models.DateTimeField(editable=False)),
                (
                    "psi1",
                    models.DecimalField(
                        decimal_places=6,
                        editable=False,
                        max_digits=20,
                        verbose_name="Psi1",
                    ),
                ),
                (
                    "psi2",
                    models.DecimalField(
                        decimal_places=6,
                        editable=False,
                        max_digits=20,
                        verbose_name="Psi1",
                    ),
                ),
                (
                    "imei",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="tracker.device"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PsiCal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sensor",
                    models.CharField(max_length=32, verbose_name="sensor serial"),
                ),
                (
                    "offpsi1",
                    models.DecimalField(
                        decimal_places=6,
                        editable=False,
                        max_digits=10,
                        verbose_name="Psi1",
                    ),
                ),
                (
                    "offpsi2",
                    models.DecimalField(
                        decimal_places=6,
                        editable=False,
                        max_digits=10,
                        verbose_name="Psi1",
                    ),
                ),
                (
                    "mulpsi1",
                    models.DecimalField(
                        decimal_places=6,
                        editable=False,
                        max_digits=10,
                        verbose_name="Psi1",
                    ),
                ),
                (
                    "mulpsi2",
                    models.DecimalField(
                        decimal_places=6,
                        editable=False,
                        max_digits=10,
                        verbose_name="Psi1",
                    ),
                ),
                ("name", models.CharField(max_length=32, verbose_name="Nombre")),
                (
                    "imei",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="tracker.device"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Overlays",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=32, unique=True, verbose_name="name"),
                ),
                (
                    "geometry",
                    django.contrib.gis.db.models.fields.LineStringField(
                        srid=4326, verbose_name="line"
                    ),
                ),
                (
                    "base",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (92, "Ruta 4"),
                            (112, "Ruta 6"),
                            (114, "Ruta 12"),
                            (115, "Ruta 31"),
                            (90, "Ruta 82"),
                            (88, "Ruta 118"),
                            (215, "Ruta 140"),
                            (89, "Ruta 202"),
                            (116, "Ruta 207"),
                            (96, "Ruta 400"),
                            (97, "Ruta 408"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AlarmLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sensor",
                    models.CharField(max_length=32, verbose_name="sensor serial"),
                ),
                ("date", models.DateTimeField(editable=False)),
                ("cksum", models.IntegerField()),
                ("duration", models.IntegerField()),
                ("comment", models.CharField(max_length=24)),
                (
                    "imei",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="tracker.device"
                    ),
                ),
            ],
            options={
                "get_latest_by": "date",
            },
        ),
        migrations.CreateModel(
            name="AccelLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "position",
                    django.contrib.gis.db.models.fields.PointField(
                        editable=False, srid=4326
                    ),
                ),
                ("date", models.DateTimeField(editable=False)),
                (
                    "duration",
                    models.DecimalField(decimal_places=4, default=0.0, max_digits=6),
                ),
                (
                    "errDuration",
                    models.DecimalField(decimal_places=4, default=0.0, max_digits=6),
                ),
                (
                    "entry",
                    models.DecimalField(decimal_places=4, default=0.0, max_digits=6),
                ),
                (
                    "errEntry",
                    models.DecimalField(decimal_places=4, default=0.0, max_digits=6),
                ),
                (
                    "peak",
                    models.DecimalField(decimal_places=4, default=0.0, max_digits=6),
                ),
                (
                    "errExit",
                    models.DecimalField(decimal_places=4, default=0.0, max_digits=6),
                ),
                (
                    "exit",
                    models.DecimalField(decimal_places=4, default=0.0, max_digits=6),
                ),
                (
                    "imei",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="tracker.device"
                    ),
                ),
            ],
            options={
                "ordering": ("imei", "date"),
            },
        ),
        migrations.CreateModel(
            name="SGAvl",
            fields=[
                (
                    "device_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="tracker.device",
                    ),
                ),
                ("serial", models.IntegerField(default=0, verbose_name="serial")),
                (
                    "model",
                    models.SmallIntegerField(
                        choices=[(0, "Desconocido"), (1, "SGB4612"), (2, "SGP4612")],
                        default=0,
                        verbose_name="model",
                    ),
                ),
                (
                    "swversion",
                    models.CharField(
                        default="----", max_length=4, verbose_name="version"
                    ),
                ),
                (
                    "inputs",
                    models.IntegerField(
                        default=0, editable=False, verbose_name="inputs"
                    ),
                ),
                (
                    "outputs",
                    models.IntegerField(
                        default=0, editable=False, verbose_name="outputs"
                    ),
                ),
                (
                    "alarmMask",
                    models.IntegerField(
                        default=321, editable=False, verbose_name="alarm mask"
                    ),
                ),
                (
                    "alarms",
                    models.IntegerField(
                        default=0, editable=False, verbose_name="alarms"
                    ),
                ),
                (
                    "fwFile",
                    models.CharField(
                        blank=True, max_length=16, verbose_name="firmware file"
                    ),
                ),
                (
                    "newOutputs",
                    models.IntegerField(
                        blank=True,
                        editable=False,
                        null=True,
                        verbose_name="new outputs",
                    ),
                ),
                (
                    "newInflags",
                    models.CharField(
                        blank=True,
                        editable=False,
                        max_length=32,
                        verbose_name="new inbputs",
                    ),
                ),
                (
                    "lastFwUpdate",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last firmware update"
                    ),
                ),
                (
                    "comments",
                    models.TextField(blank=True, null=True, verbose_name="Comments"),
                ),
                (
                    "ruta",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (92, "Ruta 4"),
                            (112, "Ruta 6"),
                            (114, "Ruta 12"),
                            (115, "Ruta 31"),
                            (90, "Ruta 82"),
                            (88, "Ruta 118"),
                            (215, "Ruta 140"),
                            (89, "Ruta 202"),
                            (116, "Ruta 207"),
                            (96, "Ruta 400"),
                            (97, "Ruta 408"),
                        ],
                        null=True,
                    ),
                ),
                ("economico", models.IntegerField(blank=True, null=True)),
                (
                    "harness",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tracker.sgharness",
                    ),
                ),
                (
                    "sim",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="avl",
                        to="tracker.simcard",
                    ),
                ),
            ],
            options={
                "verbose_name": "device",
                "verbose_name_plural": "devices",
            },
            bases=("tracker.device",),
        ),
        migrations.CreateModel(
            name="ServerSMS",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "command",
                    models.SmallIntegerField(
                        choices=[
                            (1, "Send SMS"),
                            (2, "Send Position"),
                            (3, "Execute Command"),
                        ],
                        default=0,
                        verbose_name="Command",
                    ),
                ),
                (
                    "direction",
                    models.SmallIntegerField(
                        choices=[(0, "From Server"), (1, "From Device")],
                        default=0,
                        verbose_name="Command",
                    ),
                ),
                (
                    "status",
                    models.SmallIntegerField(
                        choices=[(0, "Pending"), (1, "Sucess"), (2, "Failed")],
                        default=0,
                        verbose_name="Command",
                    ),
                ),
                (
                    "msg",
                    models.CharField(
                        default="Nuevo Mensaje", max_length=160, verbose_name="mensaje"
                    ),
                ),
                ("sent", models.DateTimeField(null=True, verbose_name="enviado")),
                (
                    "issued",
                    models.DateTimeField(
                        default=skyguard.gps.tracker.models.nowtz,
                        verbose_name="enviado",
                    ),
                ),
                (
                    "imei",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="tracker.sgavl"
                    ),
                ),
            ],
        ),
    ]
